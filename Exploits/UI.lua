local function compileHttpModule(name)
	local src = game:HttpGet("https://raw.githubusercontent.com/TheFakeFew/Scripts/refs/heads/main/Exploits/Modules/"..name..".lua")
	return loadstring(src, "="..name)()
end


local backupenv = compileHttpModule("BackupENV")
local Library = compileHttpModule("UILib")

local env = getfenv()
for i, v in next, backupenv do
	if(not env[i])then
		env[i] = v
	end
end

local function roundtopoint(num, point)
	return tonumber(string.format("%."..point.."f", num))
end

local uis = game:GetService("UserInputService")
local localPlayer = game:GetService("Players").LocalPlayer
local character, rootpart, humanoid = localPlayer.Character, nil, nil;

local iscorescript = pcall(game:GetService("VoiceChatService").leaveVoice, game:GetService("VoiceChatService"))
if(iscorescript)then
	local h = Instance.new("Hint", workspace)
	h.Text = "I am corescript level!"
	task.delay(3, pcall, workspace.Destroy, h)
	game:GetService("VoiceChatService"):joinVoice()
end

local loops = {
	["RenderStep"] = game:GetService("RunService").RenderStepped,
	["Render"] = game:GetService("RunService").PreRender,
	["Step"] = game:GetService("RunService").Stepped,
	["Heartbeat"] = game:GetService("RunService").Heartbeat,
	["PostSim"] = game:GetService("RunService").PostSimulation
}

for i, v in next, loops do
	local bound = {}
	v:Connect(function()
		for i, v in next, bound do task.spawn(v) end
	end)
	loops[i] = bound
end

local function bindto(what, func)
	if(not loops[what])then return error("wtf ts doesnt exist") end
	table.insert(loops[what], func)
end

bindto("Heartbeat", function()
	character = localPlayer.Character
	rootpart = character:FindFirstChild("HumanoidRootPart")
	humanoid = character:FindFirstChildOfClass("Humanoid")
end)


local window = Library:Window("zv7i's Exploit UI")
local config = {}


local general = window:Tab("General")
general:Toggle("Fly",function(state)
	config.fly = state
	config.flycf = rootpart.CFrame
	config.flyspeed = config.flyspeed or 1

	if(not config.fly)then
		for i, v in next, character:GetDescendants() do
			if(v:IsA("BasePart"))then
				v.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
				v.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
			end
		end

		humanoid:ChangeState(2)
	end
end)

general:Slider("Fly speed",0,6,1,function(num)
	config.flyspeed = num
end)

bindto("Heartbeat", function()
	if(not config.fly)then return end

	config.flycf = CFrame.new(config.flycf.Position) * (CFrame.lookAt(Vector3.zero, workspace.CurrentCamera.CFrame.lookVector).Rotation)
	if(not uis:GetFocusedTextBox())then
		if(uis:IsKeyDown(Enum.KeyCode.W))then
			config.flycf = config.flycf * CFrame.new(0,0,-config.flyspeed)
		end
		if(uis:IsKeyDown(Enum.KeyCode.A))then
			config.flycf = config.flycf * CFrame.new(-config.flyspeed,0,0)
		end
		if(uis:IsKeyDown(Enum.KeyCode.S))then
			config.flycf = config.flycf * CFrame.new(0,0,config.flyspeed)
		end
		if(uis:IsKeyDown(Enum.KeyCode.D))then
			config.flycf = config.flycf * CFrame.new(config.flyspeed,0,0)
		end
	end

	if(character and character:IsA("Model"))then
		character:PivotTo(config.flycf)

		if(humanoid)then
			humanoid:ChangeState(16)
		end

		for i, v in next, character:GetDescendants() do
			if(v:IsA("BasePart"))then
				v.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
				v.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
			end
		end
	end
end)


general:Slider("Walkspeed", 0, 128, 16, function(num)
	config.walkspeed = num
end)
bindto("Heartbeat", function()
	humanoid.WalkSpeed = config.walkspeed or humanoid.WalkSpeed
end)


general:Slider("JumpPower", 0, 200, 50, function(num)
	config.jumppower = num
end)
bindto("Heartbeat", function()
	humanoid.UseJumpPower = true
	humanoid.JumpPower = config.jumppower or humanoid.JumpPower
end)


general:Toggle("Anti VC Ban", function(state)
	config.antivcban = state
end)

if(iscorescript)then
	game:GetService("VoiceChatService").EnableDefaultVoice = true
	
	bindto("Heartbeat", function()
		if(config.antivcban)then
			game:GetService("VoiceChatService"):joinVoice()
		end
	end)
end


local fun = window:Tab("Fun")
fun:Slider("Animation Speed", 0, 30, 1, function(num)
	if(num == 1)then
		config.animspeed = nil
		return
	end
	config.animspeed = num
end)
bindto("Heartbeat", function()
	if(humanoid:FindFirstChildOfClass("Animator"))then
		for i, v in next, humanoid:FindFirstChildOfClass("Animator"):GetPlayingAnimationTracks() do
			v:AdjustSpeed(config.animspeed or v.Speed)
		end
	end
end)


fun:Toggle("Ball", function(state)
	config.ball = state
	humanoid.PlatformStand = state
end)
bindto("Heartbeat", function()
	if(not config.ball)then
		pcall(workspace.Parent.Destroy, character:FindFirstChild(".ball!"))
		return
	end

	if(not character:FindFirstChild(".ball!"))then
		local ball = Instance.new("Part")
		ball.Shape = "Ball"
		ball.Name = ".ball!"
		ball.Locked = true
		ball.Size = Vector3.new(8,8,8)
		ball.Transparency = 1
		ball.RootPriority = -127 -- wtf doesnt replicate movement on server unless i do this
		ball.CFrame = rootpart.CFrame
		local weld = Instance.new("Motor6D",ball)
		weld.Part0 = rootpart
		weld.Part1 = ball
		ball.Parent = character
	end

	if(not uis:GetFocusedTextBox())then
		if(uis:IsKeyDown(Enum.KeyCode.W))then
			local lv = workspace.CurrentCamera.CoordinateFrame.lookVector
			rootpart.AssemblyAngularVelocity = rootpart.AssemblyAngularVelocity + Vector3.new(lv.z,0,-lv.x) * math.rad(30)
		end
		if(uis:IsKeyDown(Enum.KeyCode.S))then
			local lv = workspace.CurrentCamera.CoordinateFrame.lookVector
			rootpart.AssemblyAngularVelocity = rootpart.AssemblyAngularVelocity + Vector3.new(-lv.z,0,lv.x) * math.rad(30)
		end
		if(uis:IsKeyDown(Enum.KeyCode.A))then
			local lv = workspace.CurrentCamera.CoordinateFrame.lookVector
			local dir = math.atan2(lv.z,-lv.x) + math.rad(90)
			rootpart.AssemblyAngularVelocity = rootpart.AssemblyAngularVelocity + Vector3.new(math.sin(dir),0,math.cos(dir)) * math.rad(30)   
		end
		if(uis:IsKeyDown(Enum.KeyCode.D))then
			local lv = workspace.CurrentCamera.CoordinateFrame.lookVector
			local dir = math.atan2(lv.z,-lv.x) - math.rad(90)
			rootpart.AssemblyAngularVelocity = rootpart.AssemblyAngularVelocity + Vector3.new(math.sin(dir),0,math.cos(dir)) * math.rad(30)
		end
		if(uis:IsKeyDown(Enum.KeyCode.Space))then
			if math.abs(character:FindFirstChild(".ball!").AssemblyLinearVelocity.y) <= 10 then
				humanoid.PlatformStand = true
				character:FindFirstChild(".ball!").AssemblyLinearVelocity = rootpart.AssemblyLinearVelocity + Vector3.new(0,75,0)
			end
		end
	end
end)


fun:Slider("Gravity", 0, 196.2*2, workspace.Gravity, function(num)
	if(num == 196.2)then
		config.gravity = nil
		return
	end
	config.gravity = num
end)
bindto("Heartbeat", function()
	if(not config.gravity)then return end
	workspace.Gravity = config.gravity
end)


local actions = window:Tab("Actions")
actions:Button("Sit",function()
	humanoid.Sit = not humanoid.Sit  
end)

actions:Button("PlatformStand",function()
	humanoid.PlatformStand = not humanoid.PlatformStand  
end)


local gateconfig = isfile("./Gates.lua") and loadfile("./Gates.lua") or {["Vector3.zero"] = Vector3.zero}
writefile("./Gates.lua", "return "..tabletostring(gateconfig))

local gates = window:Tab("Gates")

gates:Textbox("Gate Name", true, function(name)
	config.gatename = name
end)
local gatenametext = gates:Button("Current gate name:")
local gatepostext = gates:Button("Current gate position:")
local gatedropdown;

bindto("Render", function()
	if(not config.customgatepos)then
		config.gatepos = rootpart.Position
	end

	gatenametext.Update("Current gate name: "..(config.gatename or ""))

	local gateposrounded = roundtopoint(config.gatepos.X, 2)..", "..roundtopoint(config.gatepos.Y, 2)..", "..roundtopoint(config.gatepos.Z, 2)
	gatepostext.Update("Current gate position: "..gateposrounded)
end)

gates:Button("Save gate", function()
	gateconfig[config.gatename] = config.gatepos
	gatedropdown.Add(config.gatename)

	writefile("./Gates.lua", "return "..tabletostring(gateconfig))
end)
gates:Button("Remove gate", function()
	gateconfig[config.gatename] = nil
end)

local gatesformatted = {}
for i, v in next, gateconfig do
	table.insert(gatesformatted, i)
end
gatedropdown = gates:Dropdown("Load gate", gatesformatted, function(gatename)
	local gate = Instance.new("Part", workspace)
	gate.CFrame = rootpart.CFrame*CFrame.new(0, 1, -5)*CFrame.Angles(0,0,math.rad(45))
	gate.Size = Vector3.zero
	gate.Anchored = true
	gate.CanCollide = false
	gate.Color = Color3.new(1,1,1)
	gate.Material = Enum.Material.Neon

	local loop = Instance.new("Sound", gate)
	loop.SoundId = "rbxassetid://9063726568"
	loop.Looped = true
	loop.Volume = 1
	loop:Play()

	task.spawn(function()
		local s = Instance.new("Sound", gate)
		s.SoundId = "rbxassetid://2162238854"
		s.Volume = 1
		s:Play()
		game:GetService("TweenService"):Create(gate, TweenInfo.new(.5), {
			Size = Vector3.new(.1, 5, .1)
		}):Play()
		task.wait(.5)
		game:GetService("TweenService"):Create(gate, TweenInfo.new(.5), {
			Size = Vector3.new(5, 5, .1)
		}):Play()
		task.wait(.5)
	end)


	local touchcon
	touchcon = gate.Touched:Connect(function(p)
		if(p:IsDescendantOf(character))then
			character:MoveTo(gateconfig[gatename])
			touchcon:Disconnect()
		end
	end)

	task.delay(9, function()
		game:GetService("TweenService"):Create(loop, TweenInfo.new(.5), {
			Volume = 0
		}):Play()

		local s = Instance.new("Sound", gate)
		s.SoundId = "rbxassetid://2162239324"
		s.Volume = 1
		s:Play()

		game:GetService("TweenService"):Create(gate, TweenInfo.new(.5), {
			Size = Vector3.new(.1, 5, .1)
		}):Play()
		task.wait(.5)
		game:GetService("TweenService"):Create(gate, TweenInfo.new(.5), {
			Size = Vector3.zero
		}):Play()
		task.wait(.5)

		gate:Destroy()
	end)

	task.spawn(function()
		local gate = Instance.new("Part", workspace)
		gate.CFrame = CFrame.new(gateconfig[gatename])*CFrame.Angles(0,0,math.rad(45))
		gate.Size = Vector3.zero
		gate.Anchored = true
		gate.CanCollide = false
		gate.Color = Color3.new(1,1,1)
		gate.Material = Enum.Material.Neon

		local s = Instance.new("Sound", gate)
		s.SoundId = "rbxassetid://2162238854"
		s.Volume = 1
		s:Play()
		game:GetService("TweenService"):Create(gate, TweenInfo.new(.5), {
			Size = Vector3.new(.1, 5, .1)
		}):Play()
		task.wait(.5)
		game:GetService("TweenService"):Create(gate, TweenInfo.new(.5), {
			Size = Vector3.new(5, 5, .1)
		}):Play()
		task.wait(.5)
		local loop = Instance.new("Sound", gate)
		loop.SoundId = "rbxassetid://9063726568"
		loop.Looped = true
		loop.Volume = 1
		loop:Play()

		task.delay(8, function()
			game:GetService("TweenService"):Create(loop, TweenInfo.new(.5), {
				Volume = 0
			}):Play()

			local s = Instance.new("Sound", gate)
			s.SoundId = "rbxassetid://2162239324"
			s.Volume = 1
			s:Play()

			game:GetService("TweenService"):Create(gate, TweenInfo.new(.5), {
				Size = Vector3.new(.1, 5, .1)
			}):Play()
			task.wait(.5)
			game:GetService("TweenService"):Create(gate, TweenInfo.new(.5), {
				Size = Vector3.zero
			}):Play()
			task.wait(.5)

			gate:Destroy()
		end)
	end)
end)


local info = window:Tab("Info")
local gamename = info:Button("Game: ")
local position = info:Button("Position: ")
local sincejoin = info:Button("Seconds since client connected: ")
local time = info:Button("Time: ")

local _, marketinfo = pcall(function()
	return game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
end)

bindto("Render", function()
	gamename.Update("Game: ".. marketinfo or "Unknown")
	sincejoin.Update("Seconds since client connected: ".. math.floor(workspace.DistributedGameTime))
	time.Update("Time: ".. game:GetService("Lighting").TimeOfDay)

	local posrounded = roundtopoint(rootpart.Position.X, 2)..", "..roundtopoint(rootpart.Position.Y, 2)..", "..roundtopoint(rootpart.Position.Z, 2)
	position.Update("Position: "..posrounded)
end)