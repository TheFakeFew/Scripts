
local backupenv = {
	files = {}
}
function backupenv.readfile(path)
	return backupenv.files[path]
end
function backupenv.writefile(path, contents)
	backupenv.files[path] = contents
end
function backupenv.appendfile(path, content)
	backupenv.files[path] = backupenv.files[path] .. content
end
function backupenv.loadfile(path)
	return loadstring(backupenv.readfile(path))
end
function backupenv.listfiles()
	return backupenv.files
end
function backupenv.isfile(path)
	return not not backupenv.files[path]
end
function backupenv.delfile(path)
	backupenv.files[path] = nil
end

local keycodes = {
	[0x30] = "0";
	[0x31] = "1";
	[0x32] = "2";
	[0x33] = "3";
	[0x34] = "4";
	[0x35] = "5";
	[0x36] = "6";
	[0x37] = "7";
	[0x38] = "8";
	[0x39] = "9";
	[0x41] = "A";
	[0x42] = "B";
	[0x43] = "C";
	[0x44] = "D";
	[0x45] = "E";
	[0x46] = "F";
	[0x47] = "G";
	[0x48] = "H";
	[0x49] = "I";
	[0x4A] = "J";
	[0x4B] = "K";
	[0x4C] = "L";
	[0x4D] = "M";
	[0x4E] = "N";
	[0x4F] = "O";
	[0x50] = "P";
	[0x51] = "Q";
	[0x52] = "R";
	[0x53] = "S";
	[0x54] = "T";
	[0x55] = "U";
	[0x56] = "V";
	[0x57] = "W";
	[0x58] = "X";
	[0x59] = "Y";
	[0x5A] = "Z";
}
function backupenv.keypress(key)
	if(keycodes[key])then key = keycodes[key] end
	game:GetService("VirtualUser"):SetKeyDown(key)
	game:GetService("VirtualUser"):SetKeyUp(key)
end
function backupenv.keyrelease(key)
	if(keycodes[key])then key = keycodes[key] end
	game:GetService("VirtualUser"):SetKeyUp(key)
end

function backupenv.mouse1click()
	game:GetService("VirtualUser"):Button1Down(Vector2.new(20, 20), workspace.CurrentCamera.CFrame)
	game:GetService("VirtualUser"):Button1Up(Vector2.new(20, 20), workspace.CurrentCamera.CFrame)
end
function backupenv.mouse1press()
	game:GetService("VirtualUser"):Button1Down(Vector2.new(20, 20), workspace.CurrentCamera.CFrame)
end
function backupenv.mouse1release()
	game:GetService("VirtualUser"):Button1Up(Vector2.new(20, 20), workspace.CurrentCamera.CFrame)
end

function backupenv.mouse2click()
	game:GetService("VirtualUser"):Button2Down(Vector2.new(20, 20), workspace.CurrentCamera.CFrame)
	game:GetService("VirtualUser"):Button2Up(Vector2.new(20, 20), workspace.CurrentCamera.CFrame)
end
function backupenv.mouse2press()
	game:GetService("VirtualUser"):Button2Down(Vector2.new(20, 20), workspace.CurrentCamera.CFrame)
end
function backupenv.mouse2release()
	game:GetService("VirtualUser"):Button2Up(Vector2.new(20, 20), workspace.CurrentCamera.CFrame)
end

function backupenv.tabletostring(tbl, tab)
	tab = tab or 0
	local str = "{\n"
	local mult = 1
	for k,v in next, tbl do
		if type(v) == "table" then
			str = str .. string.rep("\t", (tab + 1)*mult) .. "[" .. (type(k) ~= "number" and "\"" .. k .. "\"" or k) .. "] = " .. __CoreFuncs.tabletostring(v, (tab + 1)*mult) .. ";\n"
		else
			str = str .. string.rep("\t", (tab + 1)*mult) .. "[" .. (type(k) ~= "number" and "\"" .. k .. "\"" or k) .. "] = " .. 
				(
					typeof(v) == "number" and v
					or typeof(v) == "string" and '"' .. v .. '"'
					or typeof(v) == "userdata" and '"' .. tostring(v) .. '"'
					or typeof(v) == "Vector3" and "Vector3.new("..tostring(v)..")"
					or typeof(v) == "CFrame" and "CFrame.new("..tostring(v)..")"
					or typeof(v) == "Color3" and "Color3.new("..v.R..","..v.G..","..v.B..")"
					or tostring(v)
				) .. ";\n"
		end
	end
	return str .. string.rep("\t", tab) .. "}"
end

return backupenv